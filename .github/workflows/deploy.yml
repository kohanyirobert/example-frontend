name: Deploy container image

on:
  workflow_call:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}
  TAG: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get package.json version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image (latest)
        id: push-latest
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.TAG }}
          subject-digest: ${{ steps.push-latest.outputs.digest }}
          push-to-registry: true

      - name: Check if tag exists
        uses: tyriis/docker-image-tag-exists@v2.1.0
        id: check-tag
        with:
          registry: ${{ env.REGISTRY }}
          repository: ${{ env.REPOSITORY }}
          tag: ${{ steps.package-version.outputs.current-version }}

      - name: Build and push container image (versioned)
        if: ${{ steps.check-tag.outputs.tag == 'not found' }}
        id: push-versioned
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ env.TAG }}:${{ steps.package-version.outputs.current-version }}
